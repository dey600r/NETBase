#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

#Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
#For more information, please see https://aka.ms/containercompat

FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["./Backend/MicroservicesBackend/Microservice.MaintenanceApi/Microservice.MaintenanceApi.csproj", "Microservice.MaintenanceApi/"]
COPY ["./Backend/MicroservicesBackend/Microservice.IoC/Microservice.IoC.csproj", "Microservice.IoC/"]
RUN dotnet restore "./Microservice.IoC/./Microservice.IoC.csproj"
RUN dotnet restore "./Microservice.MaintenanceApi/./Microservice.MaintenanceApi.csproj"
COPY ./Backend/MicroservicesBackend/Microservice.MaintenanceApi ./Microservice.MaintenanceApi
COPY ./Backend/MicroservicesBackend/Microservice.IoC ./Microservice.IoC
WORKDIR "/src/Microservice.MaintenanceApi"
RUN dotnet build "./Microservice.MaintenanceApi.csproj" -c %BUILD_CONFIGURATION% -o /app/build

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./Microservice.MaintenanceApi.csproj" -c %BUILD_CONFIGURATION% -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
ENV ASPNETCORE_ENVIRONMENT Openshift
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Microservice.MaintenanceApi.dll"]