// <auto-generated />
using System;
using Microservice.MaintenanceApi.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Microservice.MaintenanceApi.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231219184519_CreateInitDB")]
    partial class CreateInitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microservice.MaintenanceApi.Infraestructure.Entities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Master")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "UserUnknown",
                            Description = "PRODUCTION_SETUP",
                            Master = true,
                            Name = "PRODUCTION"
                        });
                });

            modelBuilder.Entity("Microservice.MaintenanceApi.Infraestructure.Entities.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromKm")
                        .HasColumnType("int");

                    b.Property<bool>("Init")
                        .HasColumnType("bit");

                    b.Property<int>("Km")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceFrecId")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceFreqId")
                        .HasColumnType("int");

                    b.Property<bool>("Master")
                        .HasColumnType("bit");

                    b.Property<int?>("Time")
                        .HasColumnType("int");

                    b.Property<int>("ToKm")
                        .HasColumnType("int");

                    b.Property<bool>("Wear")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MaintenanceFreqId");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("Microservice.MaintenanceApi.Infraestructure.Entities.MaintenanceFreq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceFreq");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "O",
                            CreatedDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "UserUnknown",
                            Description = "ONCE"
                        },
                        new
                        {
                            Id = 2,
                            Code = "C",
                            CreatedDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUser = "UserUnknown",
                            Description = "CALENDAR"
                        });
                });

            modelBuilder.Entity("Microservice.MaintenanceApi.Infraestructure.Entities.Maintenance", b =>
                {
                    b.HasOne("Microservice.MaintenanceApi.Infraestructure.Entities.MaintenanceFreq", "MaintenanceFreq")
                        .WithMany("Maintenances")
                        .HasForeignKey("MaintenanceFreqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintenanceFreq");
                });

            modelBuilder.Entity("Microservice.MaintenanceApi.Infraestructure.Entities.MaintenanceFreq", b =>
                {
                    b.Navigation("Maintenances");
                });
#pragma warning restore 612, 618
        }
    }
}
